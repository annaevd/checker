name: SAE Checker

on:
  schedule:
    - cron: "*/2 * * * *"          # каждые 2 минуты (UTC)
  workflow_dispatch: {}             # ручной запуск

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          set -euo pipefail
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests
          fi

      - name: Run checker (one-shot) and append to daily log
        id: run_checker
        run: |
          set -euo pipefail
          mkdir -p logs
          LOG="logs/$(date -u +%F).log"   # один файл на день (UTC)
          RUN_OUT="run.out"
          {
            echo "===== RUN $(date -u '+%Y-%m-%d %H:%M:%S UTC') ====="
            python checker.py
            echo
          } | tee -a "$LOG" | tee "$RUN_OUT" >/dev/null

      - name: Send log text to Telegram if slots found (chunked)
        if: always()
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          set -euo pipefail
          if [ -z "${BOT_TOKEN:-}" ] || [ -z "${CHAT_ID:-}" ]; then
            echo "Telegram secrets not set, skipping."
            exit 0
          fi

          # Отправляем только если в этом запуске встречалась фраза "ЕСТЬ свободные места"
          if ! grep -q "ЕСТЬ свободные места" run.out; then
            echo "No slots found in this run. Skipping Telegram."
            exit 0
          fi

          # Разбиваем run.out на части <= 3500 символов и сохраняем в chunk_*.txt
          rm -f chunk_*.txt || true
          awk -v max=3500 '
            BEGIN{c=1; l=0; fn=sprintf("chunk_%03d.txt",c)}
            {
              line=$0 ORS
              if (l + length($0) + 1 > max) { c++; fn=sprintf("chunk_%03d.txt",c); l=0 }
              printf "%s", line >> fn
              l += length($0) + 1
            }
          ' run.out

          shopt -s nullglob
          i=0; n=$(ls -1 chunk_*.txt 2>/dev/null | wc -l | xargs)
          for f in chunk_*.txt; do
            i=$((i+1))
            # Префикс [i/n], чтобы в чате было понятно, сколько сообщений в серии
            printf "[%d/%d] " "$i" "$n" | cat - "$f" > "${f}.send"
            mv "${f}.send" "$f"

            curl -sS "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
              --data-urlencode "chat_id=${CHAT_ID}" \
              --data-urlencode "text@${f}" \
              --data "disable_web_page_preview=true" \
              >/dev/null || echo "Telegram send failed for $f"
          done

      - name: Commit & push logs
        if: always()   # даже если предыдущий шаг упал — всё равно пушим то, что успели записать
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -f logs/*.log || true
          git commit -m "Append log: $(date -u '+%F %T UTC') [skip ci]" || echo "No changes to commit"
          git push
